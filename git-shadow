#!/bin/bash
# set -x

GITUNDERCONTROL=$(git rev-parse --is-inside-work-tree)
GITWORKTREE=$(git rev-parse --show-toplevel)
LINUXWORKTREE=$(echo /$GITWORKTREE|sed 's/://g'|sed 's/\/\//\//g')

GITKEEP='.gitkeep'
GITSHADOWCONFIG='config'
CONFIGFILE="$LINUXWORKTREE/$GITKEEP/$GITSHADOWCONFIG"

loadShadowEnvironment() {

    getShadowRepoList
    getBinPath
    getCurrentRepo

}

SHADOWREPOLIST=""
getShadowRepoList(){
    # SHADOWREPOLIST
    if [[ -f $CONFIGFILE ]]; then
        #statements
        SHADOWREPOLIST=$(<"$CONFIGFILE")
    fi
}

BINPATH=""
getBinPath(){
    # BINPATH
    # user script should be installed to local/bin on linux/unix
    case `uname` in
        Darwin )
            platform="MacOSX"
            BINPATH="/usr/local/bin"
            ;;
        Linux )
            ;;
        MINGW32_NT-* )
            platform="Windows"
            BINPATH="/usr/bin"
            ;;
    esac
}

# call from gitShadowCreate
# save current shadow repo to $currentRepo
CURRENTREPO=""
getCurrentRepo(){
    for repo in $SHADOWREPOLIST; do
        CURRENTREPO=$repo
        break
    done
}

isFound=false
getShadowRepoExists(){

    for repo in $SHADOWREPOLIST; do
        if [[ $1 == $repo ]]; then
            isFound=true
            break
        fi
    done
}


# todo redo the code
printUsage() {
    echo -e "Install: ./git-shadow install"
    echo -e "  Usage: git shadow [shadow command]"
    echo -e "     or: git shadow [git command]"
    echo -e ""
    echo -e "Git shadow commands:"
    echo -e "install         install this script"
    echo -e "uninstall       remove this script from system"
    echo -e "create [repo]   create shadow repo and set as default"
    echo -e "current [repo]  set default repo"
    echo -e "current         list all shadow repos"
}


#######################################
# main entry
#######################################
gitShadowInstall() {

    # tip: mingw32 ln.exe cannot create symbolic link only copy it to dest
    ln -f $(dirname $0)/$(basename $0) $BINPATH/git-shadow
    echo "git shadow installed/updated."
}

gitShadowUninstall() {

    rm $BINPATH/git-shadow
    echo "git shadow removed from your system."
}

gitShadowCreate() {

    if [[ GITUNDERCONTROL ]]; then

        getShadowRepoExists $1
        # createNewShadowAlias $1 $2
        if [[ $isFound == false ]]; then
            if [[ ! -d $LINUXWORKTREE/$GITKEEP ]]; then
                mkdir $LINUXWORKTREE/$GITKEEP
            fi

            if [[ ! -f $LINUXWORKTREE/$GITKEEP/$1.gitignore ]]; then
                echo ".git-*" > $LINUXWORKTREE/$GITKEEP/$1.gitignore
                echo ".gitkeep" >> $LINUXWORKTREE/$GITKEEP/$1.gitignore
            fi

            echo $1 $SHADOWREPOLIST > $CONFIGFILE
            echo $1 created and set as default repo.
        fi
    else
        echo -e "This folder is not under git control."
    fi

}

gitShadowCurrent() {

    if [[ -z $1 ]]; then
        # echo shadow repo list:
        firstTag="\e[32m*(current)\e[0m"
        for repo in $SHADOWREPOLIST; do
            echo -e $i $repo$firstTag
            firstTag=""
        done
    else

        getShadowRepoExists $1
        if [[ $isFound == true ]]; then
            echo $1 > $CONFIGFILE
            for repo in $SHADOWREPOLIST; do
                if [[ $1 != $repo ]]; then
                    echo $repo >> $CONFIGFILE
                fi
            done

            getShadowRepoList
            getCurrentRepo
            echo git-shadow: current repo set to $CURRENTREPO
        else
            echo git-shadow: shadow repo not found, have you create before?
        fi


    fi
}

gitShadowDebug() {
    VAR=''
    echo ${VAR-"defalult"}
    echo $VAR
}


#######################################
#  bootstrapper
#######################################
echo -e "Git Shadow Repos 0.34"
# echo -e $(dirname $0) ** find script path
if [[ -z "$1" ]]; then
    if [[ "$BASH_SOURCE" = *\.* ]]; then
        #statements
        echo -e "Please install this script first."
        echo -e `basename "$0"` install
    else
        printUsage
    fi
else
    loadShadowEnvironment
    case $1 in
        debug )
            gitShadowDebug
            ;;
        install )
            gitShadowInstall
            ;;
        uninstall )
            gitShadowUninstall
            ;;
        create* )
            gitShadowCreate $2
            ;;
        current* )
            gitShadowCurrent $2
            ;;
        *)

            echo $LINUXWORKTREE/$GITKEEP/$CURRENTREPO.gitignore
            if [[ -f $LINUXWORKTREE/$GITKEEP/$CURRENTREPO.gitignore ]]; then
                mv $LINUXWORKTREE/.gitignore $LINUXWORKTREE/$GITKEEP/git.gitignore;
                cp $LINUXWORKTREE/$GITKEEP/$CURRENTREPO.gitignore $LINUXWORKTREE/.gitignore;
            fi;

            cat $LINUXWORKTREE/.gitignore
            git --work-tree=$LINUXWORKTREE --git-dir=$LINUXWORKTREE/.git-$CURRENTREPO $@

            if [[ -f $LINUXWORKTREE/$GITKEEP/$CURRENTREPO.gitignore ]]; then
                mv $LINUXWORKTREE/$GITKEEP/git.gitignore $LINUXWORKTREE/.gitignore;
            fi;
            ;;
    esac

fi



